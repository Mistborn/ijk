// Generated by CoffeeScript 1.4.0
(function() {
  var alighi_form;

  alighi_form = function() {
    var $dateslider, $dateslider_container, $datesliderli, $errorlis, $gvidilo, $kotizoul, $newerrorlist, $tabs, DAY, NUMTABS, YEAR, activate_cb, c, curend, curstart, date_to_iso, datogamo_end, datogamo_start, error, errorlist, id, iso_to_date, kotizeroj, kotizo, kotizo_selectors, liveri_aghon_lau_naskightago, nav_callback, newtab, numnotches, selector, signo, tabwidth, tabwidths, widget_width, _i, _j, _k, _len, _len1, _ref, _ref1, _results;
    NUMTABS = 6;
    DAY = 1000 * 60 * 60 * 24;
    YEAR = DAY * 365.25;
    $.datepicker.setDefaults({
      dateFormat: 'yy-mm-dd',
      autoSize: true,
      currentText: 'hodiaŭ',
      gotoCurrent: true,
      hideIfNoPrevNextType: true,
      showOtherMonths: true,
      selectOtherMonths: true,
      showButtonPanel: false,
      changeMonth: false,
      changeYear: false,
      yearRange: "" + window.KOMENCJARO + ":" + window.KOMENCJARO,
      dayNames: ['dimanĉo', 'lundo', 'mardo', 'merkredo', 'ĵaŭdo', 'vendredo', 'sabato'],
      dayNamesMin: ['di', 'lu', 'ma', 'me', 'ĵa', 've', 'sa'],
      monthNames: ["januaro", "februaro", "marto", "aprilo", "majo", "junio", "julio", "aŭgusto", "septembro", "oktobro", "novembro", "decembro"],
      monthNamesShort: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aŭg", "sep", "okt", "nov", "dec"]
    });
    $('#id_ekde').datepicker({
      defaultDate: window.KOMENCA_DATO,
      maxDate: window.FINIGHA_DATO
    });
    $('#id_ghis').datepicker({
      defaultDate: window.FINIGHA_DATO,
      minDate: window.KOMENCA_DATO
    });
    $('#id_naskighdato').datepicker({
      changeMonth: true,
      changeYear: true,
      defaultDate: new Date(window.KOMENCA_DATO - YEAR * 25),
      yearRange: "c-74:c+19"
    });
    liveri_aghon_lau_naskightago = function(dato) {
      if (dato) {
        return (window.KOMENCA_DATO - dato) / YEAR;
      } else {
        return dato;
      }
    };
    iso_to_date = function(s) {
      var day, month, year;
      if (s == null) {
        return null;
      }
      if (!s) {
        return false;
      }
      year = parseInt(s.slice(0, 4), 10);
      month = parseInt(s.slice(5, 7), 10) - 1;
      day = parseInt(s.slice(8, 10), 10);
      return new Date(year, month, day);
    };
    date_to_iso = function(d) {
      var day, month, year;
      if (d == null) {
        return null;
      }
      if (!d) {
        return false;
      }
      year = d.getYear() + 1900;
      month = d.getMonth() + 1;
      if (month < 10) {
        month = '0' + month;
      }
      day = d.getDate();
      if (day < 10) {
        day = '0' + day;
      }
      return "" + year + "-" + month + "-" + day;
    };
    window.partoprenelektoj = function() {
      var limagho, manghokosto, minimum, result, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7,
        _this = this;
      this.ekdato = iso_to_date((_ref = $('#id_ekde').val()) != null ? _ref : false);
      this.ghisdato = iso_to_date((_ref1 = $('#id_ghis').val()) != null ? _ref1 : false);
      this.naskighdato = iso_to_date((_ref2 = $('#id_naskighdato').val()) != null ? _ref2 : false);
      this.chu_plentempa = this.ekdato === false || this.ghisdato === false ? null : this.ekdato.getTime() === window.KOMENCA_DATO.getTime() && this.ghisdato.getTime() === window.FINIGHA_DATO.getTime();
      this.loghkategorio = (_ref3 = $('input[name="loghkategorio"]:checked').val()) != null ? _ref3 : false;
      this.loghlando = (_ref4 = $('#id_loghlando :selected').val()) != null ? _ref4 : false;
      this.landokategorio = !this.loghlando ? false : window.landoj[this.loghlando];
      this.agho = liveri_aghon_lau_naskightago(this.naskighdato);
      this.aghkategoriaj_informoj = (function() {
        if (!this.agho) {
          return this.agho;
        } else {
          result = null;
          minimum = null;
          for (limagho in window.limaghoj) {
            if (!(limagho < this.agho || ((result != null) && limagho > result))) {
              result = limagho;
            }
            if (!(limagho > this.agho || ((minimum != null) && limagho < minimum))) {
              minimum = limagho;
            }
          }
          return window.limaghoj[result];
        }
      }).call(this);
      this.aghkategorio = this.aghkategoriaj_informoj ? this.aghkategoriaj_informoj[0] : this.aghkategoriaj_informoj;
      this.aghaldona_pago = this.aghkategoriaj_informoj ? this.aghkategoriaj_informoj[1] * (1 + Math.floor(this.agho) - parseInt(minimum)) : this.aghkategoriaj_informoj;
      /*
              @alighkategorio = do -> # XXX supozante ke hodiaŭ estas la aliĝdato
                  hodiau = date_to_iso new Date()
                  result = null
                  for limdato of window.limdatoj
                      result = limdato unless hodiau > limdato or
                          (result? and limdato > result)
                  window.limdatoj[result]
      */

      this.alighkategorio = (_ref5 = $('input[name="antaupagos_ghis"]:checked').val()) != null ? _ref5 : false;
      this.alighlimdato = this.alighkategorio ? window.limdatoj[this.alighkategorio] : false;
      this.tranoktoj = Math.floor((this.ghisdato - this.ekdato) / DAY);
      this.relativa_partopreno = this.chu_plentempa ? 1 : (this.tranoktoj + 1) / 5;
      this.loghkosto = (function() {
        var base, _ref6;
        if (!(_this.loghkategorio !== false && (_this.chu_plentempa != null))) {
          return false;
        }
        base = (_ref6 = window.loghkategorioj[_this.loghkategorio]) != null ? _ref6[_this.chu_plentempa ? 0 : 1] : void 0;
        if (_this.chu_plentempa) {
          return base;
        } else {
          return base * _this.tranoktoj;
        }
      })();
      this.programkotizo = !((this.aghkategorio != null) && (this.landokategorio != null) && (this.alighkategorio != null)) ? null : this.aghkategorio === false || this.landokategorio === false || this.alighkategorio === false ? false : (_ref6 = window.programkotizoj[this.aghkategorio]) != null ? (_ref7 = _ref6[this.landokategorio]) != null ? _ref7[this.alighkategorio] : void 0 : void 0;
      this.programkotizo *= this.relativa_partopreno;
      this.programkotiza += this.aghaldona_pago ? this.aghaldona_pago : 0;
      manghokosto = 0;
      $('input[name="manghomendoj"]:checked').each(function() {
        return manghokosto += window.manghomendotipoj[$(this).val()];
      });
      this.manghokosto = isNaN(manghokosto) ? null : manghokosto;
      this.uearabato = !$('#id_chu_ueamembro').is(':checked') ? 0 : this.landokategorio != null ? this.landokategorio !== false ? window.uearabatoj[this.landokategorio] : false : null;
      this.uearabato *= Math.min(this.relativa_partopreno, 1);
      this.chu_invitletero = $('#id_chu_bezonas_invitleteron').is(':checked');
      return this.chu_ekskurso = $('#id_chu_tuttaga_ekskurso').is(':checked');
    };
    $('#js-active').val(1);
    $('.fakturo-placeholder').addClass('fakturo');
    $('.fakturo').append('<span class="label">Kotizo: </span>');
    $kotizoul = $('<ul></ul>').appendTo('.fakturo');
    kotizeroj = ['programo', 'loghado', 'mangho', 'ekskurso', 'invitletero', 'uearabato', 'sumo'];
    for (_i = 0, _len = kotizeroj.length; _i < _len; _i++) {
      id = kotizeroj[_i];
      signo = (function() {
        switch (id) {
          case 'mangho':
            return '';
          case 'uearabato':
            return '\u2013';
          case 'sumo':
            return '=';
          default:
            return '+';
        }
      })();
      $kotizoul.append("<li class='" + id + "-li'>            <div class='kotizo-signo " + id + "-signo'>" + signo + "</div>            <div class='kotizo-ero " + id + "-ero'>                <div class='kotizo-kosto " + id + "-kosto'></div>                <div class='kotizo-klarigo " + id + "-klarigo'></div>            </div>        </li>");
    }
    $('.mangho-klarigo').text('manĝado');
    $('.programo-klarigo').text('programo');
    $('.ekskurso-klarigo').text('ekskurso');
    $('.invitletero-klarigo').text('invitletero');
    $('.uearabato-klarigo').text('UEA-rabato');
    $('.sumo-klarigo').text('sumo');
    kotizo = function() {
      /*
              Liveri la bazan kotizon de tiu ĉi partoprenanto
              Formulo por kotizo:
                  [manĝokosto laŭ la elekto] +
                  [loĝkosto laŭ elekto kaj laŭ kvanto de tagoj] -
                  [rabato pro UEA-membreco] + [program-kotizo]
      */

      var elektote, elektu, info, klarigo, klarigo_text, kosto, nedifinita;
      info = new partoprenelektoj;
      kosto = 0;
      nedifinita = '(nedifinita)';
      elektu = '(elektu)';
      if (info.manghokosto != null) {
        $('.mangho-kosto').text(info.manghokosto);
        kosto += info.manghokosto;
      } else {
        $('.mangho-kosto').text(nedifinita);
      }
      if (info.loghkosto === false) {
        $('.loghado-kosto').text(elektu);
        $('.loghado-klarigo').text('loĝado');
      } else if (info.loghkosto != null) {
        kosto += info.loghkosto;
        klarigo_text = info.chu_plentempa ? 'plentempa loĝado' : "loĝado por " + info.tranoktoj + " noktoj";
        $('.loghado-kosto').text(info.loghkosto);
        $('.loghado-klarigo').text(klarigo_text);
      } else {
        $('.loghado-kosto').text(nedifinita);
        $('.loghado-klarigo').text('loĝado');
      }
      if (info.programkotizo === false) {
        elektote = [];
        if (info.naskighdato === false) {
          elektote.push('naskiĝdaton');
        }
        if (info.landokategorio === false) {
          elektote.push('loĝlandon');
        }
        if (info.alighkategorio === false) {
          elektote.push('antaŭpagan daton');
        }
        $('.programo-kosto').text("(elektu " + (elektote.join(' kaj ')) + ")");
        $('.programo-klarigo').text('programo');
      } else if (info.programkotizo != null) {
        klarigo = 'programo';
        if (!info.chu_plentempa) {
          klarigo += " por " + (info.tranoktoj + 1) + " tagoj";
        }
        $('.programo-klarigo').text(klarigo);
        $('.programo-kosto').text(info.programkotizo);
        kosto += info.programkotizo;
      } else {
        $('.programo-klarigo').text('programo');
        $('.programo-kosto').text(nedifinita);
      }
      if (info.chu_ekskurso) {
        $('.ekskurso-li').show();
        kosto += window.krompagtipoj.ekskurso;
        $('.ekskurso-kosto').text(window.krompagtipoj.ekskurso);
      } else {
        $('.ekskurso-li').hide();
      }
      if (info.chu_invitletero) {
        $('.invitletero-li').show();
        kosto += window.krompagtipoj.invitletero;
        $('.invitletero-kosto').text(window.krompagtipoj.invitletero);
      } else {
        $('.invitletero-li').hide();
      }
      if (info.uearabato != null) {
        if (info.uearabato === false) {
          $('.uearabato-li').show();
          $('.uearabato-kosto').text('(elektu loĝlandon)');
        } else if (info.uearabato > 0) {
          kosto -= info.uearabato;
          $('.uearabato-li').show();
          $('.uearabato-kosto').text(info.uearabato);
        } else {
          $('.uearabato-li').hide();
        }
      } else {
        $('.uearabato-li').show();
        $('.uearabato-kosto').text(nedifinita);
      }
      return $('.sumo-kosto').text("" + kosto + " €");
    };
    kotizo_selectors = ['#id_naskighdato', '#id_loghlando', 'input[name="loghkategorio"]', 'input[name="manghomendoj"]', '#id_chu_ueamembro', '#id_ekde', '#id_ghis', '#id_chu_bezonas_invitleteron', '#id_chu_tuttaga_ekskurso', 'input[name="antaupagos_ghis"]'];
    for (_j = 0, _len1 = kotizo_selectors.length; _j < _len1; _j++) {
      selector = kotizo_selectors[_j];
      $(selector).change(kotizo);
    }
    /* aspektigaj detaloj
    */

    $('#id_loghlando option').each(function() {
      var result;
      result = $(this).text().match(/([^(]*)\(([^)]*)\)/);
      if (!(result != null)) {
        return;
      }
      $(this).text(result[1]);
      return $(this).data('landokategorio', " " + result[2]);
    });
    $('#id_loghlando').after('<span class="klarigo helptext"></span>').change(function() {
      return $(this).next('.helptext').text($(this).find(':selected').data('landokategorio'));
    });
    $('#id_loghlando').change(function() {
      var chu_israelo;
      chu_israelo = $(this).find(':selected').text().indexOf('Israelo') !== -1;
      return $('input[name="pagmaniero"]').each(function() {
        var $li;
        $li = $($(this).parents('li')[0]);
        if ($li.is(':contains("nur en Israelo")')) {
          if (chu_israelo) {
            return $li.show();
          } else {
            $(this).prop('checked', false);
            return $li.hide();
          }
        }
      });
    }).change();
    nav_callback = function(offset) {
      return function() {
        var active, newtab;
        active = $tabs.tabs('option', 'active');
        newtab = active + offset;
        if (newtab >= NUMTABS) {
          $('body, html').animate({
            scrollTop: $('.alighi').offset().top
          }, 400, 'swing', function() {
            return $('.alighi').effect('highlight').effect('shake');
          });
          return false;
        }
        if (newtab < 0 || newtab >= NUMTABS) {
          return false;
        }
        $tabs.tabs('option', 'active', newtab);
        return false;
      };
    };
    $('.reen, .antauen, .alighi').button();
    $('.reen').click(nav_callback(-1));
    $('.antauen').click(nav_callback(1));
    activate_cb = function(e, ui) {
      var tab, _ref;
      tab = (_ref = ui.newTab) != null ? _ref : ui.tab;
      return $('.reen').button('option', 'disabled', tab.index() === 0);
    };
    $tabs = $('#form-tabs').tabs({
      hide: {
        effect: 'slide',
        direction: 'left'
      },
      show: {
        effect: 'slide',
        direction: 'right'
      },
      beforeActivate: function(e, ui) {
        var hide_dir, show_dir, slide_dirs, tabdiff, _ref;
        tabdiff = ui.newTab.index() - ui.oldTab.index();
        if (Math.abs(tabdiff) === 1) {
          slide_dirs = ['left', 'right'];
        } else {
          slide_dirs = ['up', 'up'];
        }
        hide_dir = slide_dirs[0], show_dir = slide_dirs[1];
        if (tabdiff < 0) {
          _ref = [show_dir, hide_dir], hide_dir = _ref[0], show_dir = _ref[1];
        }
        return $tabs.tabs('option', {
          hide: {
            effect: 'slide',
            direction: hide_dir
          },
          show: {
            effect: 'slide',
            direction: show_dir
          }
        });
      },
      activate: activate_cb,
      create: activate_cb
    });
    datogamo_start = window.KOMENCA_DATO.getDate();
    datogamo_end = window.FINIGHA_DATO.getDate();
    numnotches = datogamo_end - datogamo_start + 2;
    curstart = (c = iso_to_date($('#id_ekde').val())) ? c.getDate() : datogamo_start;
    curend = (c = iso_to_date($('#id_ghis').val())) ? c.getDate() : datogamo_end;
    errorlist = [];
    $('#id_ekde, #id_ghis').parent().hide();
    $('#id_ekde, #id_ghis').prevAll('.errorlist').find('li').each(function() {
      return errorlist.push($(this).text());
    });
    $newerrorlist = $('<ul class="errorlist"></ul>');
    $errorlis = (function() {
      var _k, _len2, _results;
      _results = [];
      for (_k = 0, _len2 = errorlist.length; _k < _len2; _k++) {
        error = errorlist[_k];
        _results.push($("<li>" + error + "</li>").appendTo($newerrorlist));
      }
      return _results;
    })();
    tabwidths = $('.tab').map(function() {
      return $(this).width();
    });
    tabwidth = Math.max.apply(Math, tabwidths);
    widget_width = tabwidth - 300 - 14 * 2.5;
    $datesliderli = $('<li class="required">\
        <label for="id_datogamo">La daŭro de mia partopreno:</label></li>').insertAfter($('#id_ghis').parent());
    if ($errorlis.length > 0) {
      $datesliderli.prepend($newerrorlist);
    }
    $dateslider_container = $('<div></div>').appendTo($datesliderli).width(widget_width);
    $gvidilo = $('<div id="datogamo-gvidilo"></div>').css({
      width: widget_width,
      margin: 'auto',
      padding: 0,
      whiteSpace: 'nowrap'
    });
    $.each((function() {
      _results = [];
      for (var _k = _ref = datogamo_start - 1, _ref1 = datogamo_end + 1; _ref <= _ref1 ? _k <= _ref1 : _k >= _ref1; _ref <= _ref1 ? _k++ : _k--){ _results.push(_k); }
      return _results;
    }).apply(this), function(i, v) {
      return $("<div class=\"datomarko\" id=\"id_datomarko_" + v + "\">" + v + "</div>").css({
        display: 'inline-block',
        width: "" + (100 / numnotches) + "%",
        margin: 0,
        padding: 0
      }).appendTo($gvidilo);
    });
    $dateslider_container.append($gvidilo);
    $dateslider = $('<div class="datogamo" id="id_datogamo"></div>').appendTo($dateslider_container).css({
      width: widget_width,
      clear: 'both'
    }).slider({
      min: datogamo_start - 1,
      max: datogamo_end + 1,
      range: true,
      values: [curstart, curend],
      change: function(e, ui) {
        var ekde, ghis, _ref2;
        _ref2 = ui.values, ekde = _ref2[0], ghis = _ref2[1];
        $('#id_ekde').val("2013-08-" + ekde);
        $('#id_ghis').val("2013-08-" + ghis);
        $('.datomarko').each(function() {
          return $(this).css({
            fontWeight: 'normal'
          });
        });
        return $("#id_datomarko_" + ekde + ", #id_datomarko_" + ghis).css({
          fontWeight: 'bold'
        });
      }
    });
    $dateslider.slider('values', $dateslider.slider('values'));
    $("<div>la oficiala daŭro de IJK estas de la " + datogamo_start + "-a             ĝis la " + datogamo_end + "-a de aŭgusto, 2013</div>").appendTo($dateslider_container).css({
      width: widget_width * (numnotches - 2) / numnotches,
      height: '1em',
      fontSize: '80%',
      borderTop: '3px dotted blue',
      margin: 0,
      position: 'relative',
      padding: 0,
      left: widget_width / numnotches + 14,
      color: 'blue',
      textAlign: 'center'
    });
    newtab = null;
    $('.tab').each(function() {
      if ($(this).find('.errorlist').length > 0) {
        id = $(this).attr('id');
        if (newtab == null) {
          return newtab = parseInt(id.slice(id.indexOf('-') + 1));
        }
      }
    });
    if (newtab != null) {
      return $tabs.tabs('option', 'active', newtab);
    }
  };

  $(function() {
    return alighi_form();
  });

}).call(this);
